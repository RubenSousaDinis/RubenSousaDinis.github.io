"use strict";function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}var precacheConfig=[["/rubensousadinis.github.io/index.html","32a68c08d353b16b8b9a1aac596027d5"],["/rubensousadinis.github.io/static/css/main.3b8d896d.css","3ffc684122336cb3b4dca1e1818cf448"],["/rubensousadinis.github.io/static/js/main.a71b60f0.js","7f9df46c581cdb9c28bbed8bae4b674f"],["/rubensousadinis.github.io/static/media/amsterdam_1.ada1194f.jpg","ada1194f26535a31bb0ac7410333b817"],["/rubensousadinis.github.io/static/media/amsterdam_2.473112b9.jpg","473112b93568e3f403bd317387fa4d49"],["/rubensousadinis.github.io/static/media/belgium_1.0976f726.jpg","0976f7266914a78fcad2b0395e31099a"],["/rubensousadinis.github.io/static/media/belgium_2.4acd6c61.jpg","4acd6c6120471806ab44421dbdd742de"],["/rubensousadinis.github.io/static/media/budapest_1.ca358229.jpg","ca358229fdd74bc0c5ec37995e878baf"],["/rubensousadinis.github.io/static/media/budapest_2.be35d0b1.jpg","be35d0b1dec9a3fa492210cab3d4b715"],["/rubensousadinis.github.io/static/media/budapest_3.0b66d8b5.jpg","0b66d8b569df63d1abea1f06279930ff"],["/rubensousadinis.github.io/static/media/budapest_4.79386e31.jpg","79386e31352d15b2544b7dab58c5900b"],["/rubensousadinis.github.io/static/media/budapest_5.3707f53f.jpg","3707f53ffee37dd965082d3975756999"],["/rubensousadinis.github.io/static/media/flags.9c74e172.png","9c74e172f87984c48ddf5c8108cabe67"],["/rubensousadinis.github.io/static/media/foto_perfil.c95a591f.jpg","c95a591fc35bdf3a02557bfd740feaed"],["/rubensousadinis.github.io/static/media/icons.674f50d2.eot","674f50d287a8c48dc19ba404d20fe713"],["/rubensousadinis.github.io/static/media/icons.912ec66d.svg","912ec66d7572ff821749319396470bde"],["/rubensousadinis.github.io/static/media/icons.af7ae505.woff2","af7ae505a9eed503f8b8e6982036873e"],["/rubensousadinis.github.io/static/media/icons.b06871f2.ttf","b06871f281fee6b241d60582ae9369b9"],["/rubensousadinis.github.io/static/media/icons.fee66e71.woff","fee66e712a8a08eef5805a46892932ad"],["/rubensousadinis.github.io/static/media/not_found.2d3648cc.jpeg","2d3648cc1e42b985aede87f1f53dafbe"],["/rubensousadinis.github.io/static/media/prague_1.7519691a.jpg","7519691a63098252a895ca93aaeca930"],["/rubensousadinis.github.io/static/media/prague_2.fb3d9404.jpg","fb3d94049f45573995944df90c23664b"],["/rubensousadinis.github.io/static/media/prague_3.cc54857f.jpg","cc54857f95080fd5dd570fbd34f2fc04"],["/rubensousadinis.github.io/static/media/runtime_logo.c75bf0e8.png","c75bf0e89a07d6f9c24f359401ed93b3"],["/rubensousadinis.github.io/static/media/section_1.2c58897a.jpeg","2c58897a74b7316c9443acc494376ff5"],["/rubensousadinis.github.io/static/media/section_2.863cb677.jpg","863cb677b9a454bf25bf33a5e914c203"],["/rubensousadinis.github.io/static/media/section_4.068ec40d.jpeg","068ec40d6b6be89929078180ec23722d"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,t){var a=new URL(e);return"/"===a.pathname.slice(-1)&&(a.pathname+=t),a.toString()},cleanResponse=function(e){if(!e.redirected)return Promise.resolve(e);return("body"in e?Promise.resolve(e.body):e.blob()).then(function(t){return new Response(t,{headers:e.headers,status:e.status,statusText:e.statusText})})},createCacheKey=function(e,t,a,i){var n=new URL(e);return i&&n.pathname.match(i)||(n.search+=(n.search?"&":"")+encodeURIComponent(t)+"="+encodeURIComponent(a)),n.toString()},isPathWhitelisted=function(e,t){if(0===e.length)return!0;var a=new URL(t).pathname;return e.some(function(e){return a.match(e)})},stripIgnoredUrlParameters=function(e,t){var a=new URL(e);return a.hash="",a.search=a.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(e){return t.every(function(t){return!t.test(e[0])})}).map(function(e){return e.join("=")}).join("&"),a.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var t=e[0],a=e[1],i=new URL(t,self.location),n=createCacheKey(i,hashParamName,a,/\.\w{8}\./);return[i.toString(),n]}));self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(e){return setOfCachedUrls(e).then(function(t){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(a){if(!t.has(a)){var i=new Request(a,{credentials:"same-origin"});return fetch(i).then(function(t){if(!t.ok)throw new Error("Request for "+a+" returned a response with status "+t.status);return cleanResponse(t).then(function(t){return e.put(a,t)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var t=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(e){return e.keys().then(function(a){return Promise.all(a.map(function(a){if(!t.has(a.url))return e.delete(a)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(e){if("GET"===e.request.method){var t,a=stripIgnoredUrlParameters(e.request.url,ignoreUrlParametersMatching),i="index.html";(t=urlsToCacheKeys.has(a))||(a=addDirectoryIndex(a,i),t=urlsToCacheKeys.has(a));var n="/rubensousadinis.github.io/index.html";!t&&"navigate"===e.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],e.request.url)&&(a=new URL(n,self.location).toString(),t=urlsToCacheKeys.has(a)),t&&e.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(a)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(t){return console.warn('Couldn\'t serve response for "%s" from cache: %O',e.request.url,t),fetch(e.request)}))}});